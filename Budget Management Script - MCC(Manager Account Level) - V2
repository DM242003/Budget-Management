function main() {
  var accounts = AdsManagerApp.accounts().get(); // Get all accounts

  while (accounts.hasNext()) {
    var account = accounts.next();
    AdsManagerApp.select(account);
    Logger.log('Processing account: ' + account.getName());
    
    var campaigns = AdsApp.campaigns()
      .withCondition("Status = 'ENABLED'")
      .withCondition("Name = 'SE :: Custom :: Appliance Store(TEST) Updated'")//Update with campaign name
      .get();
    
    while (campaigns.hasNext()) {
      var campaign = campaigns.next();
      var labelIterator = campaign.labels().get(); // Correctly retrieve the iterator
      var campaignLabel = getCampaignLabel(labelIterator);
 
      if (campaignLabel !== null) {
        var stats = campaign.getStatsFor('THIS_MONTH');//Update the date range to match the data you want to be used
        var spend = stats.getCost();
        Logger.log('Campaign: ' + campaign.getName() + ', Spend: ' + spend + ', Label: ' + campaignLabel);
        
        // Subtract 1 from the label value before comparing with spend, input the number that you want to reduce the label by
        if (spend >= (parseFloat(campaignLabel) - 1)) {
          campaign.pause();
          Logger.log('Campaign paused due to reaching label limit.');
        }
      } else {
        Logger.log('No valid label found for campaign: ' + campaign.getName());
      }
    }
  }
}

function getCampaignLabel(labelIterator) {
  while (labelIterator.hasNext()) {
    var label = labelIterator.next();
    var labelName = label.getName();
    // Assuming label contains the budget value directly
    if (!isNaN(parseFloat(labelName))) {
      return parseFloat(labelName);
    }
  }
  return null; // Return null if no valid label is found
}
